// Copyright 1998-2015 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "Game.h"
#include "Game.generated.dep.h"
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCodeGame() {}
	void AGameCharacter::StaticRegisterNativesAGameCharacter()
	{
	}
	IMPLEMENT_CLASS(AGameCharacter, 2827007209);
	void AGameGameMode::StaticRegisterNativesAGameGameMode()
	{
	}
	IMPLEMENT_CLASS(AGameGameMode, 1235969973);
	void AGameHUD::StaticRegisterNativesAGameHUD()
	{
	}
	IMPLEMENT_CLASS(AGameHUD, 2919741594);
	void AGameProjectile::StaticRegisterNativesAGameProjectile()
	{
		FNativeFunctionRegistrar::RegisterFunction(AGameProjectile::StaticClass(),"OnHit",(Native)&AGameProjectile::execOnHit);
	}
	IMPLEMENT_CLASS(AGameProjectile, 2635654683);
	void ATestMyoPawn::StaticRegisterNativesATestMyoPawn()
	{
		FNativeFunctionRegistrar::RegisterFunction(ATestMyoPawn::StaticClass(),"MyoVibrate",(Native)&ATestMyoPawn::execMyoVibrate);
	}
	IMPLEMENT_CLASS(ATestMyoPawn, 4084324838);
	void ATestWiiActor::StaticRegisterNativesATestWiiActor()
	{
	}
	IMPLEMENT_CLASS(ATestWiiActor, 2859279870);
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	ENGINE_API class UClass* Z_Construct_UClass_ACharacter();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimMontage_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USoundBase_NoRegister();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FVector();
	ENGINE_API class UClass* Z_Construct_UClass_UCameraComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USkeletalMeshComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AGameMode();
	ENGINE_API class UClass* Z_Construct_UClass_AHUD();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FHitResult();
	ENGINE_API class UClass* Z_Construct_UClass_UPrimitiveComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AActor_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AActor();
	ENGINE_API class UClass* Z_Construct_UClass_UProjectileMovementComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USphereComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_APawn();

	GAME_API class UClass* Z_Construct_UClass_AGameCharacter_NoRegister();
	GAME_API class UClass* Z_Construct_UClass_AGameCharacter();
	GAME_API class UClass* Z_Construct_UClass_AGameGameMode_NoRegister();
	GAME_API class UClass* Z_Construct_UClass_AGameGameMode();
	GAME_API class UClass* Z_Construct_UClass_AGameHUD_NoRegister();
	GAME_API class UClass* Z_Construct_UClass_AGameHUD();
	GAME_API class UFunction* Z_Construct_UFunction_AGameProjectile_OnHit();
	GAME_API class UClass* Z_Construct_UClass_AGameProjectile_NoRegister();
	GAME_API class UClass* Z_Construct_UClass_AGameProjectile();
	GAME_API class UFunction* Z_Construct_UFunction_ATestMyoPawn_MyoVibrate();
	GAME_API class UClass* Z_Construct_UClass_ATestMyoPawn_NoRegister();
	GAME_API class UClass* Z_Construct_UClass_ATestMyoPawn();
	GAME_API class UClass* Z_Construct_UClass_ATestWiiActor_NoRegister();
	GAME_API class UClass* Z_Construct_UClass_ATestWiiActor();
	GAME_API class UPackage* Z_Construct_UPackage_Game();
	UClass* Z_Construct_UClass_AGameCharacter_NoRegister()
	{
		return AGameCharacter::StaticClass();
	}
	UClass* Z_Construct_UClass_AGameCharacter()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_ACharacter();
			Z_Construct_UPackage_Game();
			OuterClass = AGameCharacter::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_FireAnimation = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("FireAnimation"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(FireAnimation, AGameCharacter), 0x0000000000000005, Z_Construct_UClass_UAnimMontage_NoRegister());
				UProperty* NewProp_FireSound = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("FireSound"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(FireSound, AGameCharacter), 0x0000000000000005, Z_Construct_UClass_USoundBase_NoRegister());
				UProperty* NewProp_ProjectileClass = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ProjectileClass"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(ProjectileClass, AGameCharacter), 0x0004000000010001, Z_Construct_UClass_AGameProjectile_NoRegister());
				UProperty* NewProp_GunOffset = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("GunOffset"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(GunOffset, AGameCharacter), 0x0000000000000005, Z_Construct_UScriptStruct_FVector());
				UProperty* NewProp_BaseLookUpRate = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BaseLookUpRate"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(BaseLookUpRate, AGameCharacter), 0x0000000000020015);
				UProperty* NewProp_BaseTurnRate = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BaseTurnRate"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(BaseTurnRate, AGameCharacter), 0x0000000000020015);
				UProperty* NewProp_FirstPersonCameraComponent = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("FirstPersonCameraComponent"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(FirstPersonCameraComponent, AGameCharacter), 0x00000000000a001d, Z_Construct_UClass_UCameraComponent_NoRegister());
				UProperty* NewProp_Mesh1P = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Mesh1P"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(Mesh1P, AGameCharacter), 0x00000000000b0009, Z_Construct_UClass_USkeletalMeshComponent_NoRegister());
PRAGMA_POP
				OuterClass->ClassConfigName = FName(TEXT("Game"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Pawn|Character|InternalEvents Navigation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GameCharacter.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("GameCharacter.h"));
				MetaData->SetValue(NewProp_FireAnimation, TEXT("Category"), TEXT("Gameplay"));
				MetaData->SetValue(NewProp_FireAnimation, TEXT("ModuleRelativePath"), TEXT("GameCharacter.h"));
				MetaData->SetValue(NewProp_FireAnimation, TEXT("ToolTip"), TEXT("AnimMontage to play each time we fire"));
				MetaData->SetValue(NewProp_FireSound, TEXT("Category"), TEXT("Gameplay"));
				MetaData->SetValue(NewProp_FireSound, TEXT("ModuleRelativePath"), TEXT("GameCharacter.h"));
				MetaData->SetValue(NewProp_FireSound, TEXT("ToolTip"), TEXT("Sound to play each time we fire"));
				MetaData->SetValue(NewProp_ProjectileClass, TEXT("Category"), TEXT("Projectile"));
				MetaData->SetValue(NewProp_ProjectileClass, TEXT("ModuleRelativePath"), TEXT("GameCharacter.h"));
				MetaData->SetValue(NewProp_ProjectileClass, TEXT("ToolTip"), TEXT("Projectile class to spawn"));
				MetaData->SetValue(NewProp_GunOffset, TEXT("Category"), TEXT("Gameplay"));
				MetaData->SetValue(NewProp_GunOffset, TEXT("ModuleRelativePath"), TEXT("GameCharacter.h"));
				MetaData->SetValue(NewProp_GunOffset, TEXT("ToolTip"), TEXT("Gun muzzle's offset from the characters location"));
				MetaData->SetValue(NewProp_BaseLookUpRate, TEXT("Category"), TEXT("Camera"));
				MetaData->SetValue(NewProp_BaseLookUpRate, TEXT("ModuleRelativePath"), TEXT("GameCharacter.h"));
				MetaData->SetValue(NewProp_BaseLookUpRate, TEXT("ToolTip"), TEXT("Base look up/down rate, in deg/sec. Other scaling may affect final rate."));
				MetaData->SetValue(NewProp_BaseTurnRate, TEXT("Category"), TEXT("Camera"));
				MetaData->SetValue(NewProp_BaseTurnRate, TEXT("ModuleRelativePath"), TEXT("GameCharacter.h"));
				MetaData->SetValue(NewProp_BaseTurnRate, TEXT("ToolTip"), TEXT("Base turn rate, in deg/sec. Other scaling may affect final turn rate."));
				MetaData->SetValue(NewProp_FirstPersonCameraComponent, TEXT("AllowPrivateAccess"), TEXT("true"));
				MetaData->SetValue(NewProp_FirstPersonCameraComponent, TEXT("Category"), TEXT("Camera"));
				MetaData->SetValue(NewProp_FirstPersonCameraComponent, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_FirstPersonCameraComponent, TEXT("ModuleRelativePath"), TEXT("GameCharacter.h"));
				MetaData->SetValue(NewProp_FirstPersonCameraComponent, TEXT("ToolTip"), TEXT("First person camera"));
				MetaData->SetValue(NewProp_Mesh1P, TEXT("Category"), TEXT("Mesh"));
				MetaData->SetValue(NewProp_Mesh1P, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_Mesh1P, TEXT("ModuleRelativePath"), TEXT("GameCharacter.h"));
				MetaData->SetValue(NewProp_Mesh1P, TEXT("ToolTip"), TEXT("Pawn mesh: 1st person view (arms; seen only by self)"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AGameCharacter(Z_Construct_UClass_AGameCharacter, TEXT("AGameCharacter"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(AGameCharacter);
	UClass* Z_Construct_UClass_AGameGameMode_NoRegister()
	{
		return AGameGameMode::StaticClass();
	}
	UClass* Z_Construct_UClass_AGameGameMode()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AGameMode();
			Z_Construct_UPackage_Game();
			OuterClass = AGameGameMode::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x2088028C;


				OuterClass->ClassConfigName = FName(TEXT("Game"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Info Rendering MovementReplication Replication Actor Input Movement Collision Rendering Utilities|Transformation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GameGameMode.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("GameGameMode.h"));
				MetaData->SetValue(OuterClass, TEXT("ShowCategories"), TEXT("Input|MouseInput Input|TouchInput"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AGameGameMode(Z_Construct_UClass_AGameGameMode, TEXT("AGameGameMode"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(AGameGameMode);
	UClass* Z_Construct_UClass_AGameHUD_NoRegister()
	{
		return AGameHUD::StaticClass();
	}
	UClass* Z_Construct_UClass_AGameHUD()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AHUD();
			Z_Construct_UPackage_Game();
			OuterClass = AGameHUD::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x2080028C;


				OuterClass->ClassConfigName = FName(TEXT("Game"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Rendering Actor Input Replication"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GameHUD.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("GameHUD.h"));
				MetaData->SetValue(OuterClass, TEXT("ShowCategories"), TEXT("Input|MouseInput Input|TouchInput"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AGameHUD(Z_Construct_UClass_AGameHUD, TEXT("AGameHUD"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(AGameHUD);
	UFunction* Z_Construct_UFunction_AGameProjectile_OnHit()
	{
		struct GameProjectile_eventOnHit_Parms
		{
			AActor* OtherActor;
			UPrimitiveComponent* OtherComp;
			FVector NormalImpulse;
			FHitResult Hit;
		};
		UObject* Outer=Z_Construct_UClass_AGameProjectile();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnHit"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x00C20401, 65535, sizeof(GameProjectile_eventOnHit_Parms));
			UProperty* NewProp_Hit = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Hit"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Hit, GameProjectile_eventOnHit_Parms), 0x0000008008000182, Z_Construct_UScriptStruct_FHitResult());
			UProperty* NewProp_NormalImpulse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NormalImpulse"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(NormalImpulse, GameProjectile_eventOnHit_Parms), 0x0000000000000080, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_OtherComp = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OtherComp"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(OtherComp, GameProjectile_eventOnHit_Parms), 0x0000000000080080, Z_Construct_UClass_UPrimitiveComponent_NoRegister());
			UProperty* NewProp_OtherActor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OtherActor"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(OtherActor, GameProjectile_eventOnHit_Parms), 0x0000000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("GameProjectile.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("called when projectile hits something"));
			MetaData->SetValue(NewProp_OtherComp, TEXT("EditInline"), TEXT("true"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_AGameProjectile_NoRegister()
	{
		return AGameProjectile::StaticClass();
	}
	UClass* Z_Construct_UClass_AGameProjectile()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage_Game();
			OuterClass = AGameProjectile::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_AGameProjectile_OnHit());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_ProjectileMovement = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ProjectileMovement"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ProjectileMovement, AGameProjectile), 0x00000000000a001d, Z_Construct_UClass_UProjectileMovementComponent_NoRegister());
				UProperty* NewProp_CollisionComp = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CollisionComp"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(CollisionComp, AGameProjectile), 0x00000000000b0009, Z_Construct_UClass_USphereComponent_NoRegister());
PRAGMA_POP
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AGameProjectile_OnHit()); // 701342913
				OuterClass->ClassConfigName = FName(TEXT("Game"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GameProjectile.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("GameProjectile.h"));
				MetaData->SetValue(NewProp_ProjectileMovement, TEXT("AllowPrivateAccess"), TEXT("true"));
				MetaData->SetValue(NewProp_ProjectileMovement, TEXT("Category"), TEXT("Movement"));
				MetaData->SetValue(NewProp_ProjectileMovement, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_ProjectileMovement, TEXT("ModuleRelativePath"), TEXT("GameProjectile.h"));
				MetaData->SetValue(NewProp_ProjectileMovement, TEXT("ToolTip"), TEXT("Projectile movement component"));
				MetaData->SetValue(NewProp_CollisionComp, TEXT("Category"), TEXT("Projectile"));
				MetaData->SetValue(NewProp_CollisionComp, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_CollisionComp, TEXT("ModuleRelativePath"), TEXT("GameProjectile.h"));
				MetaData->SetValue(NewProp_CollisionComp, TEXT("ToolTip"), TEXT("Sphere collision component"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AGameProjectile(Z_Construct_UClass_AGameProjectile, TEXT("AGameProjectile"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(AGameProjectile);
	UFunction* Z_Construct_UFunction_ATestMyoPawn_MyoVibrate()
	{
		UObject* Outer=Z_Construct_UClass_ATestMyoPawn();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MyoVibrate"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Level"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("TestMyoPawn.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_ATestMyoPawn_NoRegister()
	{
		return ATestMyoPawn::StaticClass();
	}
	UClass* Z_Construct_UClass_ATestMyoPawn()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_APawn();
			Z_Construct_UPackage_Game();
			OuterClass = ATestMyoPawn::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;

				OuterClass->LinkChild(Z_Construct_UFunction_ATestMyoPawn_MyoVibrate());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_accelXatFist = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("accelXatFist"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(accelXatFist, ATestMyoPawn), 0x0000000000000005);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bMyoPoseDoubleTap, ATestMyoPawn, bool);
				UProperty* NewProp_bMyoPoseDoubleTap = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bMyoPoseDoubleTap"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bMyoPoseDoubleTap, ATestMyoPawn), 0x0000000000000005, CPP_BOOL_PROPERTY_BITMASK(bMyoPoseDoubleTap, ATestMyoPawn), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bMyoPoseFingersSpread, ATestMyoPawn, bool);
				UProperty* NewProp_bMyoPoseFingersSpread = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bMyoPoseFingersSpread"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bMyoPoseFingersSpread, ATestMyoPawn), 0x0000000000000005, CPP_BOOL_PROPERTY_BITMASK(bMyoPoseFingersSpread, ATestMyoPawn), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bMyoPoseFist, ATestMyoPawn, bool);
				UProperty* NewProp_bMyoPoseFist = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bMyoPoseFist"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bMyoPoseFist, ATestMyoPawn), 0x0000000000000005, CPP_BOOL_PROPERTY_BITMASK(bMyoPoseFist, ATestMyoPawn), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bMyoPoseRest, ATestMyoPawn, bool);
				UProperty* NewProp_bMyoPoseRest = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bMyoPoseRest"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bMyoPoseRest, ATestMyoPawn), 0x0000000000000005, CPP_BOOL_PROPERTY_BITMASK(bMyoPoseRest, ATestMyoPawn), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bCanPullString, ATestMyoPawn, bool);
				UProperty* NewProp_bCanPullString = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bCanPullString"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bCanPullString, ATestMyoPawn), 0x0000000000000005, CPP_BOOL_PROPERTY_BITMASK(bCanPullString, ATestMyoPawn), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bCanShootArrow, ATestMyoPawn, bool);
				UProperty* NewProp_bCanShootArrow = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bCanShootArrow"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bCanShootArrow, ATestMyoPawn), 0x0000000000000005, CPP_BOOL_PROPERTY_BITMASK(bCanShootArrow, ATestMyoPawn), sizeof(bool), true);
PRAGMA_POP
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_ATestMyoPawn_MyoVibrate()); // 1176713904
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Navigation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("TestMyoPawn.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("TestMyoPawn.h"));
				MetaData->SetValue(NewProp_accelXatFist, TEXT("Category"), TEXT("float"));
				MetaData->SetValue(NewProp_accelXatFist, TEXT("ModuleRelativePath"), TEXT("TestMyoPawn.h"));
				MetaData->SetValue(NewProp_bMyoPoseDoubleTap, TEXT("Category"), TEXT("bool"));
				MetaData->SetValue(NewProp_bMyoPoseDoubleTap, TEXT("ModuleRelativePath"), TEXT("TestMyoPawn.h"));
				MetaData->SetValue(NewProp_bMyoPoseFingersSpread, TEXT("Category"), TEXT("bool"));
				MetaData->SetValue(NewProp_bMyoPoseFingersSpread, TEXT("ModuleRelativePath"), TEXT("TestMyoPawn.h"));
				MetaData->SetValue(NewProp_bMyoPoseFist, TEXT("Category"), TEXT("bool"));
				MetaData->SetValue(NewProp_bMyoPoseFist, TEXT("ModuleRelativePath"), TEXT("TestMyoPawn.h"));
				MetaData->SetValue(NewProp_bMyoPoseRest, TEXT("Category"), TEXT("bool"));
				MetaData->SetValue(NewProp_bMyoPoseRest, TEXT("ModuleRelativePath"), TEXT("TestMyoPawn.h"));
				MetaData->SetValue(NewProp_bCanPullString, TEXT("Category"), TEXT("bool"));
				MetaData->SetValue(NewProp_bCanPullString, TEXT("ModuleRelativePath"), TEXT("TestMyoPawn.h"));
				MetaData->SetValue(NewProp_bCanShootArrow, TEXT("Category"), TEXT("bool"));
				MetaData->SetValue(NewProp_bCanShootArrow, TEXT("ModuleRelativePath"), TEXT("TestMyoPawn.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ATestMyoPawn(Z_Construct_UClass_ATestMyoPawn, TEXT("ATestMyoPawn"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(ATestMyoPawn);
	UClass* Z_Construct_UClass_ATestWiiActor_NoRegister()
	{
		return ATestWiiActor::StaticClass();
	}
	UClass* Z_Construct_UClass_ATestWiiActor()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage_Game();
			OuterClass = ATestWiiActor::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bPushLeftButton, ATestWiiActor, bool);
				UProperty* NewProp_bPushLeftButton = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bPushLeftButton"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bPushLeftButton, ATestWiiActor), 0x0000000000000005, CPP_BOOL_PROPERTY_BITMASK(bPushLeftButton, ATestWiiActor), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bPushRightButton, ATestWiiActor, bool);
				UProperty* NewProp_bPushRightButton = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bPushRightButton"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bPushRightButton, ATestWiiActor), 0x0000000000000005, CPP_BOOL_PROPERTY_BITMASK(bPushRightButton, ATestWiiActor), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bPushDownButton, ATestWiiActor, bool);
				UProperty* NewProp_bPushDownButton = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bPushDownButton"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bPushDownButton, ATestWiiActor), 0x0000000000000005, CPP_BOOL_PROPERTY_BITMASK(bPushDownButton, ATestWiiActor), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bPushUpButton, ATestWiiActor, bool);
				UProperty* NewProp_bPushUpButton = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bPushUpButton"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bPushUpButton, ATestWiiActor), 0x0000000000000005, CPP_BOOL_PROPERTY_BITMASK(bPushUpButton, ATestWiiActor), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bPushBbutton, ATestWiiActor, bool);
				UProperty* NewProp_bPushBbutton = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bPushBbutton"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bPushBbutton, ATestWiiActor), 0x0000000000000005, CPP_BOOL_PROPERTY_BITMASK(bPushBbutton, ATestWiiActor), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bPushAbutton, ATestWiiActor, bool);
				UProperty* NewProp_bPushAbutton = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bPushAbutton"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bPushAbutton, ATestWiiActor), 0x0000000000000005, CPP_BOOL_PROPERTY_BITMASK(bPushAbutton, ATestWiiActor), sizeof(bool), true);
				UProperty* NewProp_motionPlusRoll = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("motionPlusRoll"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(motionPlusRoll, ATestWiiActor), 0x0000000000000005);
				UProperty* NewProp_motionPlusPitch = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("motionPlusPitch"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(motionPlusPitch, ATestWiiActor), 0x0000000000000005);
				UProperty* NewProp_motionPlusYaw = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("motionPlusYaw"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(motionPlusYaw, ATestWiiActor), 0x0000000000000005);
PRAGMA_POP
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("TestWiiActor.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("TestWiiActor.h"));
				MetaData->SetValue(NewProp_bPushLeftButton, TEXT("Category"), TEXT("bool"));
				MetaData->SetValue(NewProp_bPushLeftButton, TEXT("ModuleRelativePath"), TEXT("TestWiiActor.h"));
				MetaData->SetValue(NewProp_bPushRightButton, TEXT("Category"), TEXT("bool"));
				MetaData->SetValue(NewProp_bPushRightButton, TEXT("ModuleRelativePath"), TEXT("TestWiiActor.h"));
				MetaData->SetValue(NewProp_bPushDownButton, TEXT("Category"), TEXT("bool"));
				MetaData->SetValue(NewProp_bPushDownButton, TEXT("ModuleRelativePath"), TEXT("TestWiiActor.h"));
				MetaData->SetValue(NewProp_bPushUpButton, TEXT("Category"), TEXT("bool"));
				MetaData->SetValue(NewProp_bPushUpButton, TEXT("ModuleRelativePath"), TEXT("TestWiiActor.h"));
				MetaData->SetValue(NewProp_bPushBbutton, TEXT("Category"), TEXT("bool"));
				MetaData->SetValue(NewProp_bPushBbutton, TEXT("ModuleRelativePath"), TEXT("TestWiiActor.h"));
				MetaData->SetValue(NewProp_bPushAbutton, TEXT("Category"), TEXT("bool"));
				MetaData->SetValue(NewProp_bPushAbutton, TEXT("ModuleRelativePath"), TEXT("TestWiiActor.h"));
				MetaData->SetValue(NewProp_motionPlusRoll, TEXT("Category"), TEXT("float"));
				MetaData->SetValue(NewProp_motionPlusRoll, TEXT("ModuleRelativePath"), TEXT("TestWiiActor.h"));
				MetaData->SetValue(NewProp_motionPlusPitch, TEXT("Category"), TEXT("float"));
				MetaData->SetValue(NewProp_motionPlusPitch, TEXT("ModuleRelativePath"), TEXT("TestWiiActor.h"));
				MetaData->SetValue(NewProp_motionPlusYaw, TEXT("Category"), TEXT("float"));
				MetaData->SetValue(NewProp_motionPlusYaw, TEXT("ModuleRelativePath"), TEXT("TestWiiActor.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ATestWiiActor(Z_Construct_UClass_ATestWiiActor, TEXT("ATestWiiActor"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(ATestWiiActor);
	UPackage* Z_Construct_UPackage_Game()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/Game")), false, false));
			ReturnPackage->PackageFlags |= PKG_CompiledIn | 0x00000000;
			FGuid Guid;
			Guid.A = 0x52FBADAD;
			Guid.B = 0x092CF8BB;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);

		}
		return ReturnPackage;
	}
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS
